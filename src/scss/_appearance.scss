%rst-table {
    th {
        @include rst-apply-properties("th",
            "font-weight"
        );
    }

    $headBodyProperties: "background-color", "color", "vertical-align", "text-align";

    thead {
        @include rst-apply-properties("head", $headBodyProperties...);
    }

    tbody {
        @include rst-apply-properties("body", $headBodyProperties...);
    }

    thead > tr > * {
        border-bottom: rst-get("head_border");
        padding: rst-get("head_padding");

        //Doing this in a weird way, because we don't want the right border of the last header to be visible by default
        //We also don't want to offset the header text (if we set the left border)
        &:not(:last-of-type) {
            //Headers except last
            border-right: rst-get("head_border");
        }

        &:last-child {
            //The spacer column
            border-left: rst-get("head_border");
        }
    }

    thead > tr:last-child > * {
        border-bottom-width: rst-get("header_border-width");
    }

    tbody > tr > * {
        border-bottom: rst-get("body_border");
        padding: rst-get("body_padding");
    }

    .rst-columnResizer {
        @include rst-apply-properties("column-resizer",
            "width"
        );
    }

    .rst-sortIcon {
        @include rst-apply-properties("sort-icon",
            "margin"
        );
    }

    .rst-container {
        @include rst-apply-properties("container",
            "margin"
        );
    }
}

%rst-placeholder {
    .rst-bodyPlaceholder {
        @include rst-apply-properties("body-placeholder",
            "padding",
            "text-align",
            "color"
        );
    }
}

%rst-rowStriped {
    tbody tr:nth-of-type(#{$rst-striped-order}) {
        @include rst-apply-properties("row-striped",
            "overlay",
            "color"
        )
    }
}

%rst-rowHover {
    tbody tr:hover {
        @include rst-apply-properties("row-hover",
            "overlay",
            "color"
        )
    }
}

%rst-rowActive {
    $properties: "underline";

    tbody tr.is-active {
        @include rst-apply-properties("row-active", $properties...);

        &.is-selected {
            @include rst-apply-properties("row-active-selected", $properties...);
        }
    }

    &:focus-within tbody tr.is-active {
        @include rst-apply-properties("row-active-focused", $properties...);

        &.is-selected {
            @include rst-apply-properties("row-active-selected-focused", $properties...);
        }
    }
}

%rst-rowSelected {
    $properties: "overlay", "color";

    tbody tr.is-selected {
        @include rst-apply-properties("row-selected", $properties...);

        & > * {
            border-color: rst-get("row-selected_border-color");
        }
    }

    &:focus-within tbody tr.is-selected {
        @include rst-apply-properties("row-selected-focused", $properties...);

        & > * {
            border-color: rst-get("row-selected-focused_border-color");
        }
    }
}

%rst-columnResizer {
    .rst-columnResizer:active {
        @include rst-apply-properties("column-resizer-active",
            "background-color"
        );
    }
}

%rst-dragSelection {
    .rst-dragSelection {
        @include rst-apply-properties("drag-selection",
            "border",
            "border-radius",
            "background-color"
        );
    }
}

%rst-pagination {
    .rst-pagination {
        grid-gap: rst-get("pg_item-spacing");

        @include rst-apply-properties("pg",
            "color",
            "padding"
        );

        & > * {
            @include rst-apply-properties("pg-item",
                "padding"
            )
        }
    }
}

%rst-paginationPages {
    .rst-pagination > .rst-page {
        @include rst-apply-properties("pg-page",
            "width"
        )
    }
}

%rst-paginationButtons {
    .rst-pagination > button {
        @include rst-apply-properties("pg-btn",
            "background-color",
            "border-radius",
            "border",
            "color"
        );

        $properties: "background-color", "border-color", "color";

        &:hover {
            @include rst-apply-properties("pg-btn-hover", $properties...);
        }

        &.is-current {
            @include rst-apply-properties("pg-btn-current", $properties...);
        }

        &:disabled {
            @include rst-apply-properties("pg-btn-disabled", $properties...);
        }
    }
}

%rst-search {
    .rst-searchContainer {
        top: rst-get("search_height", -1);
        column-gap: rst-get("search_item-spacing");

        @include rst-apply-properties("search",
            "width",
            "height",
            "left",
            "background-color",
            "color",
            "padding",
            "border",
            "border-radius"
        );

        &.is-visible {
            @include rst-apply-properties("search-visible",
                "top",
                "box-shadow"
            );
        }
    }
}

%rst-searchMatches {
    .rst-searchContainer div {
        padding-right: rst-get("search_item-spacing");
        border-right: rst-get("search-matches_border");
        color: rst-get("search-matches_color");
    }
}

%rst-searchButtons {
    .rst-searchContainer button {
        @include rst-apply-properties("search-btn",
            "padding",
            "border",
            "border-radius",
            "background-color"
        );

        &:hover {
            @include rst-apply-properties("search-btn-hover",
                "background-color",
                "border-color"
            );
        }
    }
}

.rst-table {
    @include rst-load-config($rst-config);

    @extend %rst-table;
    @extend %rst-placeholder;
    @extend %rst-rowActive;
    @extend %rst-rowStriped;
    @extend %rst-rowHover;
    @extend %rst-rowSelected;
    @extend %rst-dragSelection;
    @extend %rst-columnResizer;
    @extend %rst-pagination;
    @extend %rst-paginationButtons;
    @extend %rst-paginationPages;
    @extend %rst-search;
    @extend %rst-searchMatches;
    @extend %rst-searchButtons;
}
